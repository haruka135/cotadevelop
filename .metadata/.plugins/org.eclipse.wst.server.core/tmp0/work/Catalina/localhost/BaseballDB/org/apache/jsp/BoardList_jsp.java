/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.68
 * Generated at: 2022-10-24 05:03:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import Boardmodel.BoardBean;
import java.util.Vector;
import Boardmodel.BoardDAO;

public final class BoardList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("Boardmodel.BoardDAO");
    _jspx_imports_classes.add("java.util.Vector");
    _jspx_imports_classes.add("Boardmodel.BoardBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("	<meta charset=\"UTF-8\">\n");
      out.write("	<title>MLB-Statcast Database</title>\n");
      out.write("	<link rel=\"stylesheet\" type=\"text/css\" href=\"../xeicon/xeicon.min.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"css_part/frame.css\">\n");
      out.write("	<link rel=\"stylesheet\" href=\"css_part/swiper.min.css\">\n");
      out.write("	<link rel=\"stylesheet\" href=\"css_part/default.css\">\n");
      out.write("	<script src=\"script_part/jquery.js\" charset=\"utf-8\"></script>\n");
      out.write("	<script src=\"script_part/swiper.js\" charset=\"utf-8\"></script>\n");
      out.write("	<script src=\"script_part/default.js\" charset=\"utf-8\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("	");

		int pageSize = 10;
	
		String pageNum = request.getParameter("pageNum");
		
		if(pageNum == null) {
			
			pageNum = "1";
			
			
		}
		
		int count = 0;
		
		int number = 0;
		
		int currentPage = Integer.parseInt(pageNum);
	
		BoardDAO bdao = new BoardDAO();
		
		count = bdao.getAllCount();
		
		int startRow = (currentPage-1)*pageSize+1;
		
		int endRow = currentPage*pageSize;
		
	
		Vector<BoardBean> vec =  bdao.getAllBoard(startRow,endRow);
		
		number = count - (currentPage- 1) * pageSize;
		
	
	
      out.write("\n");
      out.write("	\n");
      out.write("\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Top.jsp", out, false);
      out.write("\n");
      out.write("	<section class=\"block board_wrap\">\n");
      out.write("            <div class=\"joincontents\">\n");
      out.write("                <h2 class=\"subject2\">게시판</h2>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("			<div class=\"board_title\">\n");
      out.write("				<strong>FAQ</strong>\n");
      out.write("				<p>공지사항을 빠르고 정확하게 안내해 드립니다.</p>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"board_list_wrap\">\n");
      out.write("				<div class=\"board_list\">\n");
      out.write("					<div class=\"top\">\n");
      out.write("						<div class=\"num\">번호</div>\n");
      out.write("						<div class=\"title\">제목</div>\n");
      out.write("						<div class=\"write\">글쓴이</div>\n");
      out.write("						<div class=\"date\">작성일</div>\n");
      out.write("						<div class=\"count\">조회</div>\n");
      out.write("					</div>\n");
      out.write("					\n");
      out.write("					");

					
						for(int i=0;i<vec.size();i++) {
					
						BoardBean bean = vec.get(i);
					
      out.write("\n");
      out.write("					\n");
      out.write("					<div>\n");
      out.write("						<div class=\"num\">");
      out.print( number-- );
      out.write("</div>\n");
      out.write("						<div class=\"title\"><a href=\"BoardInfo.jsp?num=");
      out.print( bean.getNum() );
      out.write("\">\n");
      out.write("						");

							if(bean.getRe_step() > 1) {
								
								for(int j = 0; j<(bean.getRe_step()-1)*5;j++){
									
									
												
						
      out.write(" &nbsp;\n");
      out.write("									\n");
      out.write("						");
		}
							
								
							}
						
						
      out.write("\n");
      out.write("										   ");
      out.print( bean.getSubject() );
      out.write("</a></div>\n");
      out.write("						<div class=\"write\">");
      out.print( bean.getWriter() );
      out.write("</div>\n");
      out.write("						<div class=\"date\">");
      out.print( bean.getReg_date() );
      out.write("</div>\n");
      out.write("						<div class=\"count\">");
      out.print( bean.getReadcount() );
      out.write("</div>\n");
      out.write("					</div>\n");
      out.write("				\n");
      out.write("				   ");

				   
						}
				   
				   
      out.write("\n");
      out.write("				\n");
      out.write("					\n");
      out.write("				</div>\n");
      out.write("				\n");
      out.write("				<div class=\"board_page\">\n");
      out.write("				\n");
      out.write("				");

				
					if(count > 0) {
						
						int pageCount = count / pageSize +(count% pageSize == 0 ? 0 : 1);
						
						int startPage = 1;
						
						if(currentPage % 10 != 0 ) {
							
							startPage = (int) (currentPage/10)*10+1;
							
						}else {
							
							
							startPage = (int)(currentPage/10-1)*10+1;
							
						}
						
						
						int pageBlock = 10;
						
						int endPage = startPage + pageBlock -1;
						
						if(endPage > pageCount) endPage = pageCount;
						
						if(startPage>10) {
				
				
      out.write("\n");
      out.write("				\n");
      out.write("					<a href=\"BoardList.jsp?pageNum=");
      out.print( startPage-10 );
      out.write("\" class=\"num on\">[이전]</a>\n");
      out.write("					\n");
      out.write("				");

						}
						
						for(int i=startPage;i<=endPage;i++) {
							
							
				
      out.write("\n");
      out.write("				\n");
      out.write("					<a href=\"BoardList.jsp?pageNum=");
      out.print( i );
      out.write("\" class=\"num on\">");
      out.print(i );
      out.write("</a>\n");
      out.write("				\n");
      out.write("				");

							
						}
						
						if(endPage < pageCount) {
							
				
      out.write("	\n");
      out.write("				\n");
      out.write("				<a href=\"BoardList.jsp?pageNum=");
      out.print( startPage+10 );
      out.write("\" class=\"num on\">[다]</a>		\n");
      out.write("							\n");
      out.write("				");
		
						}
				
					}
				
      out.write("\n");
      out.write("				</div>\n");
      out.write("				\n");
      out.write("				<div class=\"bt_wrap\">\n");
      out.write("					<a href=\"BoardWriteForm.jsp\" class=\"on\">글쓰기</a>\n");
      out.write("					<!--- <a href=\"#\">수정</a> -->\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("        </section>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
